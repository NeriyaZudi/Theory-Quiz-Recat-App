{"version":3,"sources":["HomePage.jsx","QuestionBox.jsx","Buttons.jsx","Questions.jsx","ErrorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomePage","props","className","id","src","width","height","onClick","to","class","QuestionBox","Card","style","questionIndex","Body","Title","title","onChange","slice","call","options","map","option","index","type","value","name","display","htmlFor","innerHTML","replace","dangerouslySetInnerHTML","__html","image","QuizButtons","scrollIcon","scrollText","Button","checkQuiz","margin","getQuestions","window","scrollTo","top","scrollAxis","left","behavior","Questions","useState","questions","setQuestions","answers","setAnswers","loading","setLoading","fetch","then","data","json","res","arr","randomQuestionsArr","length","r","Math","floor","random","indexOf","push","result","records","questionsArr","quest","correctAnswer","htmlQuestion","DOMParser","parseFromString","description4","getElementsByTagName","title2","outerHTML","includes","answersArr","i","answer","onCheckQuiz","correctCounter","wrongCounter","notAnsweredCounter","forEach","document","getElementById","backgroundColor","setTimeout","alert","useEffect","questionList","e","onChangeAnswer","target","quiz","textAlign","marginTop","Buttons","body","scrollHeight","marginBottom","ErrorPage","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.fdbc89cb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\n\r\nfunction HomePage(props){\r\n\r\n      function myFunction() {\r\n        var popup = document.getElementById(\"myPopup\");\r\n        popup.classList.toggle(\"show\");\r\n      }\r\n\r\n    return(\r\n\r\n        <div className=\"home\">\r\n            <h1>מבחן תיאוריה אונליין</h1>\r\n            \r\n            <section id=\"logo\">\r\n\r\n                <img src=\".//logo.png\" width=\"100px\" height=\"100px\"></img> \r\n                <p id=\"welcome\"> \r\n                 <h2>ברוכים הבאים לאתר מבחן תיאוריה </h2>\r\n                 באתר זה ניתן לתרגל שאלות ממבחן התיאוריה הרישמי של משרד התחבורה     \r\n                </p>\r\n    \r\n            </section>\r\n\r\n            <button id=\"buttonStart\" onClick=\"\">\r\n                <Link to=\"/quiz\"> התחל מבחן </Link>\r\n            </button>\r\n\r\n            <details>\r\n                <summary>  למידע נוסף  <i class='fas fa-info-circle'></i></summary>\r\n                <p>האתר נבנה במסגרת פרוייקט ראשון בReact JS.<br></br>\r\n                האתר מדמה מבחן תיאוריה עם שאלות מהמאגר הרישמי של משרד התחבורה.\r\n                <br></br>המבחן כולל 10 שאלות ללא הגבלת זמן וניתן בכל שלב לבדוק את התשובות<br></br>\r\n                <br></br> ניתן לצפות בקוד המקור <br></br>\r\n                </p>\r\n            </details>\r\n \r\n            <img src=\".//symbolsPic.jpg\" id=\"symbol\" ></img> \r\n\r\n         </div>   \r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport './App.css';\r\n\r\nfunction QuestionBox(props){\r\n  return (\r\n    <Card\r\n      style={{ width: \"100%\" }}\r\n      key={props.questionIndex}\r\n      id={`card:${props.questionIndex}`}\r\n    >\r\n      <Card.Body className=\"CardBody\">\r\n        \r\n      <Card.Title id=\"title\">\r\n          שאלה {props.questionIndex + 1} : \r\n      </Card.Title>\r\n        \r\n      <Card.Title>{props.title}</Card.Title>\r\n\r\n        <div onChange={props.onChange}>\r\n          {[].slice.call(props.options).map((option, index) => {\r\n            return (\r\n              <p\r\n                key={index}\r\n                id={`p-question:${props.questionIndex}answer:${index}`}\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  value={index}\r\n                  name={props.questionIndex}\r\n                  id={`input-question:${props.questionIndex}answer:${index}`}\r\n                  className=\"ml-2\"\r\n                />\r\n                <label\r\n                  style={{ display: \"inline\" }}\r\n                  htmlFor={`input-question:${props.questionIndex}answer:${index}`}\r\n                >\r\n                  {option.innerHTML.replace(/<\\/?[^>]+(>|$)/g, \"\")}\r\n                </label>\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div\r\n          className=\"mb-3\"\r\n          dangerouslySetInnerHTML={{ __html: props.image }}\r\n        ></div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default QuestionBox;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction QuizButtons(props) {\r\n  let scrollIcon = <i className=\"fas fa-arrow-up ml-2\"></i>;\r\n  if (props.scrollText === \" למטה \") {\r\n    scrollIcon = <i className=\"fas fa-arrow-down\"></i>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"bottons\" onClick={props.checkQuiz}>\r\n        <i className=\"fas fa-clipboard-check ml-2\"></i>\r\n        <strong style={{margin:\"5px\"}}>  בדיקה  </strong> \r\n      </Button>\r\n      \r\n      <Button  className=\"bottons\" onClick={props.getQuestions}>\r\n        <i className=\"fas fa-retweet ml-2\"></i>\r\n        <strong style={{margin:\"5px\"}}>  החלף שאלות </strong> \r\n      </Button>\r\n      \r\n      <Button className=\"bottons\" \r\n          onClick={() =>\r\n            window.scrollTo({\r\n              top: props.scrollAxis,\r\n              left: 0,\r\n              behavior: \"smooth\",\r\n            })\r\n          }\r\n        >\r\n        {scrollIcon}\r\n        {props.scrollText}\r\n      </Button>\r\n      \r\n      <Link to=\"/\">\r\n          <Button className=\"bottons\">\r\n              <i className=\"fas fa-home ml-2\"></i>\r\n              <strong style={{margin:\"5px\"}}> דף הבית </strong>\r\n          </Button>\r\n      </Link> \r\n                \r\n    </>\r\n  );\r\n  \r\n} \r\n export default QuizButtons; \r\n","import React from \"react\";\r\nimport './App.css';\r\nimport { useEffect,useState } from \"react\";\r\nimport QuestionBox from \"./QuestionBox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Buttons from \"./Buttons\";\r\n\r\n\r\n\r\nconst LIM = 10;\r\nconst API_URL=\"https://data.gov.il/api/3/action/datastore_search?resource_id=bf7cb748-f220-474b-a4d5-2d59f93db28d\";\r\n\r\nfunction Questions(props){\r\n\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n   \r\n    useEffect(()=> {\r\n        getQuestions();\r\n    },[] )\r\n\r\n    function getQuestions() {\r\n        setLoading(true);\r\n        fetch(`${API_URL}&limit=100`).then( data => {\r\n            data.json().then( res =>  {\r\n         \r\n          /* Random questions */\r\n          const arr = [];\r\n          const randomQuestionsArr = [];\r\n    \r\n         \r\n          while (arr.length < LIM) {\r\n            const r = Math.floor(Math.random() * 100);\r\n    \r\n            if (arr.indexOf(r) === -1) {\r\n              arr.push(r);\r\n              randomQuestionsArr.push(res.result.records[r]);\r\n            }\r\n          }\r\n          debugger;\r\n    \r\n          /* Convert Questions objects */\r\n          const questionsArr = randomQuestionsArr.map((quest) => {\r\n            const htmlQuestion = new DOMParser().parseFromString(\r\n              quest.description4,\r\n              \"text/html\"\r\n            );\r\n    \r\n            // parse li and img tags from html\r\n            const options = htmlQuestion.getElementsByTagName(\"li\");\r\n            let image = htmlQuestion.getElementsByTagName(\"img\");\r\n            const title = quest.title2;\r\n            image[0] ? (image = image[0].outerHTML) : (image = null);\r\n    \r\n            // check for correct answer\r\n            let correctAnswer;\r\n            for (let index = 0; index <= 3; index++) {\r\n              const element = [].slice.call(options)[index];\r\n              if (element.innerHTML.includes(\"correct\")) {\r\n                correctAnswer = index;\r\n              }\r\n            }\r\n            return { options, image, title, correctAnswer };\r\n          });\r\n          /* Convert Questions objects */\r\n    \r\n          setQuestions(questionsArr);\r\n    \r\n          setLoading(false);\r\n    \r\n          /* Set answers arr with null values */\r\n          const answersArr = [];\r\n          for (let i = 0; i < questionsArr.length; i++) {\r\n            answersArr.push({\r\n              answer: null,\r\n              correctAnswer: questionsArr[i].correctAnswer,\r\n            });\r\n          }\r\n          setAnswers(answersArr);\r\n          /* Set answers arr with null values */\r\n        });\r\n      });\r\n    }\r\n\r\n    function onChangeAnswer(questionIndex, answer, correctAnswer) {\r\n        debugger;\r\n        const answersArr = [...answers];\r\n        answersArr[questionIndex][\"answer\"] = answer;\r\n        setAnswers(answersArr);\r\n    }\r\n\r\n    function onCheckQuiz() {\r\n        let correctCounter = 0;\r\n        let wrongCounter = 0;\r\n        let notAnsweredCounter = 0;\r\n    \r\n        answers.forEach((answer, index) => {\r\n          if (answer.answer === answer.correctAnswer) {\r\n            document.getElementById(`card:${index}`).style.backgroundColor =\r\n              \"greenyellow\";\r\n            correctCounter++;\r\n          } else if (!answer.answer) {\r\n            document.getElementById(`card:${index}`).style.backgroundColor = \"lightgray\";\r\n            notAnsweredCounter++;\r\n          } else {\r\n            document.getElementById(`card:${index}`).style.backgroundColor = \"red\";\r\n            wrongCounter++;\r\n          }\r\n    \r\n          document.getElementById(\r\n            `p-question:${index}answer:${answer.correctAnswer}`\r\n          ).style.backgroundColor = \"greenyellow\";\r\n        });\r\n    \r\n        setTimeout(() => {\r\n          alert(\r\n            `המבחן כולל ${LIM} שאלות: \\n${correctCounter} שאלות נענו נכון \\n${wrongCounter} שאלות נענו לא נכון \\n${notAnsweredCounter} שאלות לא נענו`\r\n          );\r\n        }, 100);\r\n      }\r\n\r\n    const questionList = questions.map((quest, questionIndex) => {\r\n        return (\r\n            <QuestionBox\r\n                key={quest.title}\r\n                questionIndex={questionIndex}\r\n                title={quest.title}\r\n                image={quest.image}\r\n                options={quest.options}\r\n                onChange={(e) =>\r\n                  onChangeAnswer(questionIndex, e.target.value * 1, quest.correctAnswer)\r\n                }\r\n            ></QuestionBox>\r\n        );\r\n    });\r\n\r\n    let quiz = (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h1>טוען</h1>\r\n          <div class=\"load\"></div>\r\n        </div>\r\n      );\r\n    \r\n      if (!loading) {\r\n        quiz = (\r\n          <div style={{ textAlign: \"right\" }}>\r\n            <div style={{ textAlign: \"center\", marginTop: \"15px\" }}>\r\n              <Buttons\r\n                checkQuiz={() => onCheckQuiz()}\r\n                getQuestions={() => getQuestions()}\r\n                scrollText=\" למטה \"\r\n                scrollAxis={document.body.scrollHeight}\r\n              />\r\n            </div>\r\n    \r\n            {questionList}\r\n    \r\n            <div style={{ textAlign: \"center\", marginBottom: \"15px\"}}>\r\n              <Buttons\r\n                checkQuiz={() => onCheckQuiz()}\r\n                getQuestions={() => getQuestions()}\r\n                scrollText=\" למעלה \" \r\n                scrollAxis=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n          \r\n\r\n\r\nreturn(\r\n\r\n    <div className=\"quiz\">\r\n        <h1>שאלות תיאוריה</h1>\r\n         {quiz} \r\n    </div>   \r\n    );\r\n\r\n}\r\n\r\nexport default Questions;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ErrorPage(){\r\n    return(\r\n      <div className=\"error_container\">\r\n         <Link to=\"/\">\r\n          <Button id=\"return_home\">\r\n              <i className=\"fas fa-home ml-2\"></i>\r\n              <strong style={{margin:\"5px\"}}> דף הבית </strong>\r\n          </Button>\r\n        </Link> \r\n        <h1> 404 הדף  המבוקש לא נמצא</h1>\r\n        <img src=\".//404.jpg\"></img> \r\n      </div>\r\n    \r\n    );\r\n}\r\nexport default ErrorPage;\r\n","\n\nimport { BrowserRouter,Switch,Route} from 'react-router-dom';\nimport './App.css';\nimport {Link} from 'react-router-dom';\nimport HomePage from './HomePage';\nimport Questions from './Questions';\nimport ErrorPage from './ErrorPage';\n\n\nfunction App() {\n  return (\n    \n    <main>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/quiz\" exact>\n            <Questions />\n         </Route>\n          <Route>\n            <ErrorPage />\n          </Route>\n      </Switch>\n      </BrowserRouter>\n    \n    </main>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/Theory\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}